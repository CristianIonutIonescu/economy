// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datatypes.proto

#include "datatypes.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace economy {
class ProtoDateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtoDate>
      _instance;
} _ProtoDate_default_instance_;
class DataPayloadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataPayload>
      _instance;
} _DataPayload_default_instance_;
class DataRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataRequest>
      _instance;
} _DataRequest_default_instance_;
class DataReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataReply>
      _instance;
} _DataReply_default_instance_;
class CurrencyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CurrencyRequest>
      _instance;
} _CurrencyRequest_default_instance_;
class CurrencyReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CurrencyReply>
      _instance;
} _CurrencyReply_default_instance_;
}  // namespace economy
namespace protobuf_datatypes_2eproto {
void InitDefaultsProtoDateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::economy::_ProtoDate_default_instance_;
    new (ptr) ::economy::ProtoDate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::economy::ProtoDate::InitAsDefaultInstance();
}

void InitDefaultsProtoDate() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProtoDateImpl);
}

void InitDefaultsDataPayloadImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_datatypes_2eproto::InitDefaultsProtoDate();
  {
    void* ptr = &::economy::_DataPayload_default_instance_;
    new (ptr) ::economy::DataPayload();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::economy::DataPayload::InitAsDefaultInstance();
}

void InitDefaultsDataPayload() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDataPayloadImpl);
}

void InitDefaultsDataRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_datatypes_2eproto::InitDefaultsProtoDate();
  {
    void* ptr = &::economy::_DataRequest_default_instance_;
    new (ptr) ::economy::DataRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::economy::DataRequest::InitAsDefaultInstance();
}

void InitDefaultsDataRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDataRequestImpl);
}

void InitDefaultsDataReplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_datatypes_2eproto::InitDefaultsDataPayload();
  {
    void* ptr = &::economy::_DataReply_default_instance_;
    new (ptr) ::economy::DataReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::economy::DataReply::InitAsDefaultInstance();
}

void InitDefaultsDataReply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDataReplyImpl);
}

void InitDefaultsCurrencyRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::economy::_CurrencyRequest_default_instance_;
    new (ptr) ::economy::CurrencyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::economy::CurrencyRequest::InitAsDefaultInstance();
}

void InitDefaultsCurrencyRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCurrencyRequestImpl);
}

void InitDefaultsCurrencyReplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::economy::_CurrencyReply_default_instance_;
    new (ptr) ::economy::CurrencyReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::economy::CurrencyReply::InitAsDefaultInstance();
}

void InitDefaultsCurrencyReply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCurrencyReplyImpl);
}

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::economy::ProtoDate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::economy::ProtoDate, day_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::economy::ProtoDate, month_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::economy::ProtoDate, year_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::economy::DataPayload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::economy::DataPayload, date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::economy::DataPayload, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::economy::DataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::economy::DataRequest, begin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::economy::DataRequest, end_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::economy::DataReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::economy::DataReply, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::economy::CurrencyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::economy::CurrencyRequest, new_currency_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::economy::CurrencyReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::economy::CurrencyReply, conversion_rate_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::economy::ProtoDate)},
  { 8, -1, sizeof(::economy::DataPayload)},
  { 15, -1, sizeof(::economy::DataRequest)},
  { 22, -1, sizeof(::economy::DataReply)},
  { 28, -1, sizeof(::economy::CurrencyRequest)},
  { 34, -1, sizeof(::economy::CurrencyReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::economy::_ProtoDate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::economy::_DataPayload_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::economy::_DataRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::economy::_DataReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::economy::_CurrencyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::economy::_CurrencyReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "datatypes.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017datatypes.proto\022\007economy\"5\n\tProtoDate\022"
      "\013\n\003day\030\001 \001(\005\022\r\n\005month\030\002 \001(\005\022\014\n\004year\030\003 \001("
      "\005\">\n\013DataPayload\022 \n\004date\030\001 \001(\0132\022.economy"
      ".ProtoDate\022\r\n\005value\030\002 \001(\002\"Q\n\013DataRequest"
      "\022!\n\005begin\030\001 \001(\0132\022.economy.ProtoDate\022\037\n\003e"
      "nd\030\002 \001(\0132\022.economy.ProtoDate\"2\n\tDataRepl"
      "y\022%\n\007content\030\001 \003(\0132\024.economy.DataPayload"
      "\":\n\017CurrencyRequest\022\'\n\014new_currency\030\001 \001("
      "\0162\021.economy.Currency\"(\n\rCurrencyReply\022\027\n"
      "\017conversion_rate\030\001 \001(\001*%\n\010Currency\022\007\n\003RO"
      "N\020\000\022\007\n\003EUR\020\001\022\007\n\003USD\020\0022\221\001\n\020TransportServi"
      "ce\0227\n\007GetData\022\024.economy.DataRequest\032\022.ec"
      "onomy.DataReply\"\0000\001\022D\n\016ChangeCurrency\022\030."
      "economy.CurrencyRequest\032\026.economy.Curren"
      "cyReply\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 577);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "datatypes.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_datatypes_2eproto
namespace economy {
const ::google::protobuf::EnumDescriptor* Currency_descriptor() {
  protobuf_datatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datatypes_2eproto::file_level_enum_descriptors[0];
}
bool Currency_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ProtoDate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoDate::kDayFieldNumber;
const int ProtoDate::kMonthFieldNumber;
const int ProtoDate::kYearFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoDate::ProtoDate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_datatypes_2eproto::InitDefaultsProtoDate();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:economy.ProtoDate)
}
ProtoDate::ProtoDate(const ProtoDate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&day_, &from.day_,
    static_cast<size_t>(reinterpret_cast<char*>(&year_) -
    reinterpret_cast<char*>(&day_)) + sizeof(year_));
  // @@protoc_insertion_point(copy_constructor:economy.ProtoDate)
}

void ProtoDate::SharedCtor() {
  ::memset(&day_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&year_) -
      reinterpret_cast<char*>(&day_)) + sizeof(year_));
  _cached_size_ = 0;
}

ProtoDate::~ProtoDate() {
  // @@protoc_insertion_point(destructor:economy.ProtoDate)
  SharedDtor();
}

void ProtoDate::SharedDtor() {
}

void ProtoDate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoDate::descriptor() {
  ::protobuf_datatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoDate& ProtoDate::default_instance() {
  ::protobuf_datatypes_2eproto::InitDefaultsProtoDate();
  return *internal_default_instance();
}

ProtoDate* ProtoDate::New(::google::protobuf::Arena* arena) const {
  ProtoDate* n = new ProtoDate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoDate::Clear() {
// @@protoc_insertion_point(message_clear_start:economy.ProtoDate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&day_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&year_) -
      reinterpret_cast<char*>(&day_)) + sizeof(year_));
  _internal_metadata_.Clear();
}

bool ProtoDate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:economy.ProtoDate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 day = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &day_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 month = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &month_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 year = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &year_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:economy.ProtoDate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:economy.ProtoDate)
  return false;
#undef DO_
}

void ProtoDate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:economy.ProtoDate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 day = 1;
  if (this->day() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->day(), output);
  }

  // int32 month = 2;
  if (this->month() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->month(), output);
  }

  // int32 year = 3;
  if (this->year() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->year(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:economy.ProtoDate)
}

::google::protobuf::uint8* ProtoDate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:economy.ProtoDate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 day = 1;
  if (this->day() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->day(), target);
  }

  // int32 month = 2;
  if (this->month() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->month(), target);
  }

  // int32 year = 3;
  if (this->year() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->year(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:economy.ProtoDate)
  return target;
}

size_t ProtoDate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:economy.ProtoDate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 day = 1;
  if (this->day() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->day());
  }

  // int32 month = 2;
  if (this->month() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->month());
  }

  // int32 year = 3;
  if (this->year() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->year());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoDate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:economy.ProtoDate)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoDate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoDate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:economy.ProtoDate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:economy.ProtoDate)
    MergeFrom(*source);
  }
}

void ProtoDate::MergeFrom(const ProtoDate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:economy.ProtoDate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.day() != 0) {
    set_day(from.day());
  }
  if (from.month() != 0) {
    set_month(from.month());
  }
  if (from.year() != 0) {
    set_year(from.year());
  }
}

void ProtoDate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:economy.ProtoDate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoDate::CopyFrom(const ProtoDate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:economy.ProtoDate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoDate::IsInitialized() const {
  return true;
}

void ProtoDate::Swap(ProtoDate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoDate::InternalSwap(ProtoDate* other) {
  using std::swap;
  swap(day_, other->day_);
  swap(month_, other->month_);
  swap(year_, other->year_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoDate::GetMetadata() const {
  protobuf_datatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataPayload::InitAsDefaultInstance() {
  ::economy::_DataPayload_default_instance_._instance.get_mutable()->date_ = const_cast< ::economy::ProtoDate*>(
      ::economy::ProtoDate::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataPayload::kDateFieldNumber;
const int DataPayload::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataPayload::DataPayload()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_datatypes_2eproto::InitDefaultsDataPayload();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:economy.DataPayload)
}
DataPayload::DataPayload(const DataPayload& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_date()) {
    date_ = new ::economy::ProtoDate(*from.date_);
  } else {
    date_ = NULL;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:economy.DataPayload)
}

void DataPayload::SharedCtor() {
  ::memset(&date_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&date_)) + sizeof(value_));
  _cached_size_ = 0;
}

DataPayload::~DataPayload() {
  // @@protoc_insertion_point(destructor:economy.DataPayload)
  SharedDtor();
}

void DataPayload::SharedDtor() {
  if (this != internal_default_instance()) delete date_;
}

void DataPayload::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataPayload::descriptor() {
  ::protobuf_datatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataPayload& DataPayload::default_instance() {
  ::protobuf_datatypes_2eproto::InitDefaultsDataPayload();
  return *internal_default_instance();
}

DataPayload* DataPayload::New(::google::protobuf::Arena* arena) const {
  DataPayload* n = new DataPayload;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataPayload::Clear() {
// @@protoc_insertion_point(message_clear_start:economy.DataPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && date_ != NULL) {
    delete date_;
  }
  date_ = NULL;
  value_ = 0;
  _internal_metadata_.Clear();
}

bool DataPayload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:economy.DataPayload)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .economy.ProtoDate date = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:economy.DataPayload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:economy.DataPayload)
  return false;
#undef DO_
}

void DataPayload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:economy.DataPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .economy.ProtoDate date = 1;
  if (this->has_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->date_, output);
  }

  // float value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:economy.DataPayload)
}

::google::protobuf::uint8* DataPayload::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:economy.DataPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .economy.ProtoDate date = 1;
  if (this->has_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->date_, deterministic, target);
  }

  // float value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:economy.DataPayload)
  return target;
}

size_t DataPayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:economy.DataPayload)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .economy.ProtoDate date = 1;
  if (this->has_date()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->date_);
  }

  // float value = 2;
  if (this->value() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataPayload::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:economy.DataPayload)
  GOOGLE_DCHECK_NE(&from, this);
  const DataPayload* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataPayload>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:economy.DataPayload)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:economy.DataPayload)
    MergeFrom(*source);
  }
}

void DataPayload::MergeFrom(const DataPayload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:economy.DataPayload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_date()) {
    mutable_date()->::economy::ProtoDate::MergeFrom(from.date());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void DataPayload::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:economy.DataPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataPayload::CopyFrom(const DataPayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:economy.DataPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataPayload::IsInitialized() const {
  return true;
}

void DataPayload::Swap(DataPayload* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataPayload::InternalSwap(DataPayload* other) {
  using std::swap;
  swap(date_, other->date_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DataPayload::GetMetadata() const {
  protobuf_datatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataRequest::InitAsDefaultInstance() {
  ::economy::_DataRequest_default_instance_._instance.get_mutable()->begin_ = const_cast< ::economy::ProtoDate*>(
      ::economy::ProtoDate::internal_default_instance());
  ::economy::_DataRequest_default_instance_._instance.get_mutable()->end_ = const_cast< ::economy::ProtoDate*>(
      ::economy::ProtoDate::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataRequest::kBeginFieldNumber;
const int DataRequest::kEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataRequest::DataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_datatypes_2eproto::InitDefaultsDataRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:economy.DataRequest)
}
DataRequest::DataRequest(const DataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_begin()) {
    begin_ = new ::economy::ProtoDate(*from.begin_);
  } else {
    begin_ = NULL;
  }
  if (from.has_end()) {
    end_ = new ::economy::ProtoDate(*from.end_);
  } else {
    end_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:economy.DataRequest)
}

void DataRequest::SharedCtor() {
  ::memset(&begin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_) -
      reinterpret_cast<char*>(&begin_)) + sizeof(end_));
  _cached_size_ = 0;
}

DataRequest::~DataRequest() {
  // @@protoc_insertion_point(destructor:economy.DataRequest)
  SharedDtor();
}

void DataRequest::SharedDtor() {
  if (this != internal_default_instance()) delete begin_;
  if (this != internal_default_instance()) delete end_;
}

void DataRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataRequest::descriptor() {
  ::protobuf_datatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataRequest& DataRequest::default_instance() {
  ::protobuf_datatypes_2eproto::InitDefaultsDataRequest();
  return *internal_default_instance();
}

DataRequest* DataRequest::New(::google::protobuf::Arena* arena) const {
  DataRequest* n = new DataRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:economy.DataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && begin_ != NULL) {
    delete begin_;
  }
  begin_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_ != NULL) {
    delete end_;
  }
  end_ = NULL;
  _internal_metadata_.Clear();
}

bool DataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:economy.DataRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .economy.ProtoDate begin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_begin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .economy.ProtoDate end = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:economy.DataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:economy.DataRequest)
  return false;
#undef DO_
}

void DataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:economy.DataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .economy.ProtoDate begin = 1;
  if (this->has_begin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->begin_, output);
  }

  // .economy.ProtoDate end = 2;
  if (this->has_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->end_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:economy.DataRequest)
}

::google::protobuf::uint8* DataRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:economy.DataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .economy.ProtoDate begin = 1;
  if (this->has_begin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->begin_, deterministic, target);
  }

  // .economy.ProtoDate end = 2;
  if (this->has_end()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->end_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:economy.DataRequest)
  return target;
}

size_t DataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:economy.DataRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .economy.ProtoDate begin = 1;
  if (this->has_begin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->begin_);
  }

  // .economy.ProtoDate end = 2;
  if (this->has_end()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->end_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:economy.DataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DataRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:economy.DataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:economy.DataRequest)
    MergeFrom(*source);
  }
}

void DataRequest::MergeFrom(const DataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:economy.DataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_begin()) {
    mutable_begin()->::economy::ProtoDate::MergeFrom(from.begin());
  }
  if (from.has_end()) {
    mutable_end()->::economy::ProtoDate::MergeFrom(from.end());
  }
}

void DataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:economy.DataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataRequest::CopyFrom(const DataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:economy.DataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataRequest::IsInitialized() const {
  return true;
}

void DataRequest::Swap(DataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataRequest::InternalSwap(DataRequest* other) {
  using std::swap;
  swap(begin_, other->begin_);
  swap(end_, other->end_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DataRequest::GetMetadata() const {
  protobuf_datatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataReply::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataReply::DataReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_datatypes_2eproto::InitDefaultsDataReply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:economy.DataReply)
}
DataReply::DataReply(const DataReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      content_(from.content_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:economy.DataReply)
}

void DataReply::SharedCtor() {
  _cached_size_ = 0;
}

DataReply::~DataReply() {
  // @@protoc_insertion_point(destructor:economy.DataReply)
  SharedDtor();
}

void DataReply::SharedDtor() {
}

void DataReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataReply::descriptor() {
  ::protobuf_datatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataReply& DataReply::default_instance() {
  ::protobuf_datatypes_2eproto::InitDefaultsDataReply();
  return *internal_default_instance();
}

DataReply* DataReply::New(::google::protobuf::Arena* arena) const {
  DataReply* n = new DataReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:economy.DataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  _internal_metadata_.Clear();
}

bool DataReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:economy.DataReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .economy.DataPayload content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:economy.DataReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:economy.DataReply)
  return false;
#undef DO_
}

void DataReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:economy.DataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .economy.DataPayload content = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->content(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:economy.DataReply)
}

::google::protobuf::uint8* DataReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:economy.DataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .economy.DataPayload content = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->content(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:economy.DataReply)
  return target;
}

size_t DataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:economy.DataReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .economy.DataPayload content = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->content_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->content(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:economy.DataReply)
  GOOGLE_DCHECK_NE(&from, this);
  const DataReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:economy.DataReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:economy.DataReply)
    MergeFrom(*source);
  }
}

void DataReply::MergeFrom(const DataReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:economy.DataReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
}

void DataReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:economy.DataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataReply::CopyFrom(const DataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:economy.DataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataReply::IsInitialized() const {
  return true;
}

void DataReply::Swap(DataReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataReply::InternalSwap(DataReply* other) {
  using std::swap;
  content_.InternalSwap(&other->content_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DataReply::GetMetadata() const {
  protobuf_datatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CurrencyRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CurrencyRequest::kNewCurrencyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CurrencyRequest::CurrencyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_datatypes_2eproto::InitDefaultsCurrencyRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:economy.CurrencyRequest)
}
CurrencyRequest::CurrencyRequest(const CurrencyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  new_currency_ = from.new_currency_;
  // @@protoc_insertion_point(copy_constructor:economy.CurrencyRequest)
}

void CurrencyRequest::SharedCtor() {
  new_currency_ = 0;
  _cached_size_ = 0;
}

CurrencyRequest::~CurrencyRequest() {
  // @@protoc_insertion_point(destructor:economy.CurrencyRequest)
  SharedDtor();
}

void CurrencyRequest::SharedDtor() {
}

void CurrencyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CurrencyRequest::descriptor() {
  ::protobuf_datatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CurrencyRequest& CurrencyRequest::default_instance() {
  ::protobuf_datatypes_2eproto::InitDefaultsCurrencyRequest();
  return *internal_default_instance();
}

CurrencyRequest* CurrencyRequest::New(::google::protobuf::Arena* arena) const {
  CurrencyRequest* n = new CurrencyRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CurrencyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:economy.CurrencyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  new_currency_ = 0;
  _internal_metadata_.Clear();
}

bool CurrencyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:economy.CurrencyRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .economy.Currency new_currency = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_new_currency(static_cast< ::economy::Currency >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:economy.CurrencyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:economy.CurrencyRequest)
  return false;
#undef DO_
}

void CurrencyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:economy.CurrencyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .economy.Currency new_currency = 1;
  if (this->new_currency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->new_currency(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:economy.CurrencyRequest)
}

::google::protobuf::uint8* CurrencyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:economy.CurrencyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .economy.Currency new_currency = 1;
  if (this->new_currency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->new_currency(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:economy.CurrencyRequest)
  return target;
}

size_t CurrencyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:economy.CurrencyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .economy.Currency new_currency = 1;
  if (this->new_currency() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->new_currency());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CurrencyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:economy.CurrencyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CurrencyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CurrencyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:economy.CurrencyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:economy.CurrencyRequest)
    MergeFrom(*source);
  }
}

void CurrencyRequest::MergeFrom(const CurrencyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:economy.CurrencyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.new_currency() != 0) {
    set_new_currency(from.new_currency());
  }
}

void CurrencyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:economy.CurrencyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CurrencyRequest::CopyFrom(const CurrencyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:economy.CurrencyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CurrencyRequest::IsInitialized() const {
  return true;
}

void CurrencyRequest::Swap(CurrencyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CurrencyRequest::InternalSwap(CurrencyRequest* other) {
  using std::swap;
  swap(new_currency_, other->new_currency_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CurrencyRequest::GetMetadata() const {
  protobuf_datatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CurrencyReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CurrencyReply::kConversionRateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CurrencyReply::CurrencyReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_datatypes_2eproto::InitDefaultsCurrencyReply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:economy.CurrencyReply)
}
CurrencyReply::CurrencyReply(const CurrencyReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  conversion_rate_ = from.conversion_rate_;
  // @@protoc_insertion_point(copy_constructor:economy.CurrencyReply)
}

void CurrencyReply::SharedCtor() {
  conversion_rate_ = 0;
  _cached_size_ = 0;
}

CurrencyReply::~CurrencyReply() {
  // @@protoc_insertion_point(destructor:economy.CurrencyReply)
  SharedDtor();
}

void CurrencyReply::SharedDtor() {
}

void CurrencyReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CurrencyReply::descriptor() {
  ::protobuf_datatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CurrencyReply& CurrencyReply::default_instance() {
  ::protobuf_datatypes_2eproto::InitDefaultsCurrencyReply();
  return *internal_default_instance();
}

CurrencyReply* CurrencyReply::New(::google::protobuf::Arena* arena) const {
  CurrencyReply* n = new CurrencyReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CurrencyReply::Clear() {
// @@protoc_insertion_point(message_clear_start:economy.CurrencyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  conversion_rate_ = 0;
  _internal_metadata_.Clear();
}

bool CurrencyReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:economy.CurrencyReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double conversion_rate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &conversion_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:economy.CurrencyReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:economy.CurrencyReply)
  return false;
#undef DO_
}

void CurrencyReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:economy.CurrencyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double conversion_rate = 1;
  if (this->conversion_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->conversion_rate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:economy.CurrencyReply)
}

::google::protobuf::uint8* CurrencyReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:economy.CurrencyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double conversion_rate = 1;
  if (this->conversion_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->conversion_rate(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:economy.CurrencyReply)
  return target;
}

size_t CurrencyReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:economy.CurrencyReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double conversion_rate = 1;
  if (this->conversion_rate() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CurrencyReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:economy.CurrencyReply)
  GOOGLE_DCHECK_NE(&from, this);
  const CurrencyReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CurrencyReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:economy.CurrencyReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:economy.CurrencyReply)
    MergeFrom(*source);
  }
}

void CurrencyReply::MergeFrom(const CurrencyReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:economy.CurrencyReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.conversion_rate() != 0) {
    set_conversion_rate(from.conversion_rate());
  }
}

void CurrencyReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:economy.CurrencyReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CurrencyReply::CopyFrom(const CurrencyReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:economy.CurrencyReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CurrencyReply::IsInitialized() const {
  return true;
}

void CurrencyReply::Swap(CurrencyReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CurrencyReply::InternalSwap(CurrencyReply* other) {
  using std::swap;
  swap(conversion_rate_, other->conversion_rate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CurrencyReply::GetMetadata() const {
  protobuf_datatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace economy

// @@protoc_insertion_point(global_scope)
